trigger:
- main

stages:
- stage: Checkout
  displayName: 'Checkout code'
  jobs:
  - deployment: CheckoutJob
    displayName: 'Checkout Repo on VM'
    environment:
      name: test
      resourceName: jiro-vm
      resourceType: virtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - publish: $(Build.SourcesDirectory)
              artifact: source-code

# - stage: Plan
#   displayName: 'Terraform Plan'
#   dependsOn: Checkout
#   jobs:
#   - deployment: TerraformPlan
#     displayName: 'Terraform Plan on Self-Hosted VM'
#     environment:
#       name: test
#       resourceName: jiro-vm
#       resourceType: virtualMachine
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#             - download: current
#               artifact: source-code

#             - script: |
#                 cd $(Pipeline.Workspace)/source-code
#                 terraform --version
#                 terraform init
#                 terraform plan -out=tfplan -var="account_id=$ACCOUNT_ID" -var="azure_tenant_id=$AZURE_TENANT_ID"
#               env:
#                 ACCOUNT_ID: $(account_id)
#                 AZURE_TENANT_ID: $(azure_tenant_id)
#               displayName: 'Terraform Init and Plan'

- stage: Deploy
  displayName: 'Terraform Apply'
  dependsOn: Checkout
  jobs:
  - deployment: TerraformApply
    displayName: 'Terraform Apply on Self-Hosted VM'
    environment:
      name: test
      resourceName: jiro-vm
      resourceType: virtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
            - download: current
              artifact: source-code

            - script: |
                cd $(Pipeline.Workspace)/source-code
                terraform --version
                terraform init
                echo "Running Terraform Apply with DEBUG logging..."
                terraform apply -auto-approve -var="account_id=$ACCOUNT_ID" -var="azure_tenant_id=$AZURE_TENANT_ID"
                echo "Apply completed"
                ls -l /home/adminuser/terraform-apply-debug.log || echo "Apply debug log not found"
              env:
                ACCOUNT_ID: $(account_id)
                AZURE_TENANT_ID: $(azure_tenant_id)
                TF_LOG: DEBUG
                TF_LOG_PATH: /home/adminuser/terraform-apply-debug.log
              displayName: 'Terraform Init and Apply with logs'
